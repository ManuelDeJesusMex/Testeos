// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestProyecto.Context;

namespace TestProyecto.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230802191825_TestAula15")]
    partial class TestAula15
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ProductoVenta", b =>
                {
                    b.Property<int>("ProductosPkProducto")
                        .HasColumnType("int");

                    b.Property<int>("VentasPkCompra")
                        .HasColumnType("int");

                    b.HasKey("ProductosPkProducto", "VentasPkCompra");

                    b.HasIndex("VentasPkCompra");

                    b.ToTable("ProductoVenta");
                });

            modelBuilder.Entity("TestProyecto.Entities.Cliente", b =>
                {
                    b.Property<int>("PkCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CorreoCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FkRol")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("SaldoCliente")
                        .HasColumnType("double");

                    b.HasKey("PkCliente");

                    b.HasIndex("FkRol");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            PkCliente = 1,
                            ApellidoCliente = "Perez",
                            CorreoCliente = "arriba@gmail.com",
                            FkRol = 1,
                            NombreCliente = "Juan",
                            PasswordCliente = "123",
                            SaldoCliente = 0.0
                        });
                });

            modelBuilder.Entity("TestProyecto.Entities.DetalleVenta", b =>
                {
                    b.Property<int>("FkProducto")
                        .HasColumnType("int");

                    b.Property<int>("FkVenta")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime");

                    b.Property<double>("Subtotal")
                        .HasColumnType("double");

                    b.Property<double>("Total")
                        .HasColumnType("double");

                    b.HasKey("FkProducto", "FkVenta");

                    b.HasIndex("FkVenta");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("TestProyecto.Entities.Lote", b =>
                {
                    b.Property<int>("PkLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("NomLote")
                        .HasColumnType("int");

                    b.HasKey("PkLote");

                    b.ToTable("Lotes");

                    b.HasData(
                        new
                        {
                            PkLote = 1,
                            NomLote = 1
                        },
                        new
                        {
                            PkLote = 2,
                            NomLote = 2
                        },
                        new
                        {
                            PkLote = 3,
                            NomLote = 3
                        },
                        new
                        {
                            PkLote = 4,
                            NomLote = 4
                        },
                        new
                        {
                            PkLote = 5,
                            NomLote = 5
                        },
                        new
                        {
                            PkLote = 6,
                            NomLote = 6
                        },
                        new
                        {
                            PkLote = 7,
                            NomLote = 7
                        },
                        new
                        {
                            PkLote = 8,
                            NomLote = 8
                        },
                        new
                        {
                            PkLote = 9,
                            NomLote = 9
                        });
                });

            modelBuilder.Entity("TestProyecto.Entities.Producto", b =>
                {
                    b.Property<int>("PkProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("FkLote")
                        .HasColumnType("int");

                    b.Property<int?>("FkSabor")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("FkTamano")
                        .HasColumnType("int");

                    b.Property<int?>("FkVendedor")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("double");

                    b.HasKey("PkProducto");

                    b.HasIndex("FkLote");

                    b.HasIndex("FkSabor");

                    b.HasIndex("FkTamano");

                    b.HasIndex("FkVendedor");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("TestProyecto.Entities.Rol", b =>
                {
                    b.Property<int>("PkRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RolName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkRol");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            PkRol = 1,
                            RolName = "Cliente"
                        },
                        new
                        {
                            PkRol = 2,
                            RolName = "Vendedor"
                        },
                        new
                        {
                            PkRol = 3,
                            RolName = "SA"
                        });
                });

            modelBuilder.Entity("TestProyecto.Entities.Sabor", b =>
                {
                    b.Property<int>("PkSabor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameSabor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkSabor");

                    b.ToTable("Sabores");

                    b.HasData(
                        new
                        {
                            PkSabor = 1,
                            NameSabor = "Natural"
                        },
                        new
                        {
                            PkSabor = 2,
                            NameSabor = "Cola"
                        },
                        new
                        {
                            PkSabor = 3,
                            NameSabor = "Naranja"
                        },
                        new
                        {
                            PkSabor = 4,
                            NameSabor = "Limon"
                        },
                        new
                        {
                            PkSabor = 5,
                            NameSabor = "Negro"
                        },
                        new
                        {
                            PkSabor = 6,
                            NameSabor = "Lager"
                        },
                        new
                        {
                            PkSabor = 7,
                            NameSabor = "Fresa"
                        },
                        new
                        {
                            PkSabor = 8,
                            NameSabor = "Merlot"
                        },
                        new
                        {
                            PkSabor = 9,
                            NameSabor = "Pina"
                        });
                });

            modelBuilder.Entity("TestProyecto.Entities.SuperAdmin", b =>
                {
                    b.Property<int>("PkSuperAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoSuperAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContraseñaSuperAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CorreoSuperAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FkRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreSuperAdmin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkSuperAdmin");

                    b.HasIndex("FkRol");

                    b.ToTable("SuperAdministradores");

                    b.HasData(
                        new
                        {
                            PkSuperAdmin = 1,
                            ApellidoSuperAdmin = "Gutierrez",
                            ContraseñaSuperAdmin = "123",
                            CorreoSuperAdmin = "Felipe@gmail.com",
                            FkRol = 3,
                            NombreSuperAdmin = "Felipe"
                        });
                });

            modelBuilder.Entity("TestProyecto.Entities.Tamano", b =>
                {
                    b.Property<int>("PkTamano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TamanoP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkTamano");

                    b.ToTable("Tamanos");

                    b.HasData(
                        new
                        {
                            PkTamano = 1,
                            TamanoP = "Chico"
                        },
                        new
                        {
                            PkTamano = 2,
                            TamanoP = "Mediano"
                        },
                        new
                        {
                            PkTamano = 3,
                            TamanoP = "Grande"
                        });
                });

            modelBuilder.Entity("TestProyecto.Entities.Vendedor", b =>
                {
                    b.Property<int>("PkVendedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoVendedor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContraseñaVendedor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CorreoV")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FkRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreVendedor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkVendedor");

                    b.HasIndex("FkRol");

                    b.ToTable("Vendedores");

                    b.HasData(
                        new
                        {
                            PkVendedor = 1,
                            ApellidoVendedor = "Gonzalez",
                            ContraseñaVendedor = "546546",
                            CorreoV = "juan.gonzalez@gmail.com",
                            FkRol = 2,
                            NombreVendedor = "Juan"
                        },
                        new
                        {
                            PkVendedor = 2,
                            ApellidoVendedor = "Silva",
                            ContraseñaVendedor = "564643",
                            CorreoV = "maria.silva@gmail.com",
                            FkRol = 2,
                            NombreVendedor = "Maria"
                        },
                        new
                        {
                            PkVendedor = 3,
                            ApellidoVendedor = "Rojas",
                            ContraseñaVendedor = "234324",
                            CorreoV = "cristian.rojas@gmail.com",
                            FkRol = 2,
                            NombreVendedor = "Cristian"
                        },
                        new
                        {
                            PkVendedor = 4,
                            ApellidoVendedor = "Perez",
                            ContraseñaVendedor = "123",
                            CorreoV = "diablo@gmail.com",
                            FkRol = 3,
                            NombreVendedor = "Leonardo"
                        });
                });

            modelBuilder.Entity("TestProyecto.Entities.Venta", b =>
                {
                    b.Property<int>("PkCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime");

                    b.Property<int?>("FkCliente")
                        .HasColumnType("int");

                    b.HasKey("PkCompra");

                    b.HasIndex("FkCliente");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ProductoVenta", b =>
                {
                    b.HasOne("TestProyecto.Entities.Producto", null)
                        .WithMany()
                        .HasForeignKey("ProductosPkProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProyecto.Entities.Venta", null)
                        .WithMany()
                        .HasForeignKey("VentasPkCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestProyecto.Entities.Cliente", b =>
                {
                    b.HasOne("TestProyecto.Entities.Rol", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TestProyecto.Entities.DetalleVenta", b =>
                {
                    b.HasOne("TestProyecto.Entities.Producto", "Producto")
                        .WithMany("ProductosVenta")
                        .HasForeignKey("FkProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProyecto.Entities.Venta", "Venta")
                        .WithMany("ProductosVenta")
                        .HasForeignKey("FkVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("TestProyecto.Entities.Producto", b =>
                {
                    b.HasOne("TestProyecto.Entities.Lote", "Lotes")
                        .WithMany()
                        .HasForeignKey("FkLote");

                    b.HasOne("TestProyecto.Entities.Sabor", "Sabores")
                        .WithMany()
                        .HasForeignKey("FkSabor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProyecto.Entities.Tamano", "Tamanos")
                        .WithMany()
                        .HasForeignKey("FkTamano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProyecto.Entities.Vendedor", "Vendedores")
                        .WithMany()
                        .HasForeignKey("FkVendedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lotes");

                    b.Navigation("Sabores");

                    b.Navigation("Tamanos");

                    b.Navigation("Vendedores");
                });

            modelBuilder.Entity("TestProyecto.Entities.SuperAdmin", b =>
                {
                    b.HasOne("TestProyecto.Entities.Rol", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRol");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TestProyecto.Entities.Vendedor", b =>
                {
                    b.HasOne("TestProyecto.Entities.Rol", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRol");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TestProyecto.Entities.Venta", b =>
                {
                    b.HasOne("TestProyecto.Entities.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("FkCliente");

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("TestProyecto.Entities.Producto", b =>
                {
                    b.Navigation("ProductosVenta");
                });

            modelBuilder.Entity("TestProyecto.Entities.Venta", b =>
                {
                    b.Navigation("ProductosVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
